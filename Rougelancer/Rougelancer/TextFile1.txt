        //private void ProcessInput(GameTime _GameTime) {
        //float _Time = (float)_GameTime.ElapsedGameTime.TotalMilliseconds;
        //while(TouchPanel.IsGestureAvailable) {
        //GestureSample gesture = TouchPanel.ReadGesture();
        //switch(gesture.GestureType) {
        //case GestureType.Tap:
        //currentState++;
        //if(currentState > effects.Length - 1) {
        //currentState = 0;
        //}
        //lFireParticleSystem.EmissionRate = 0;
        //lSmokeRingEmitter.EmissionRate = 0;
        //lSmokePlumeEmitter.EmissionRate = 0;
        //switch(currentState) {
        //case 1:
        //if(lSmokeEnabled == true) {
        //}
        //lSmokePlumeEmitter.EmissionRate = lSmokePlumeParticles;
        //break;
        //case 2:
        //lFireParticleSystem.EmissionRate = lFireRingSystemParticles;
        //lSmokeRingEmitter.EmissionRate = lSmokeRingParticles;
        //break;
        //}
        //break;
        //case GestureType.FreeDrag:
        //lCameraArc -= gesture.Delta.Y * time * 0.01f;
        //lCameraRotation += gesture.Delta.X * time * 0.01f;
        //if(lCameraArc > 90.0f)
        //lCameraArc = 90.0f;
        //else if(lCameraArc < -90.0f)
        //lCameraArc = -90.0f;
        //break;
        //case GestureType.Pinch:
        //float currentPinchDistance = Vector2.Distance(gesture.Position, gesture.Position2) * 0.0025f;
        //if(!initialPinchDistance.HasValue) {
        //initialPinchDistance = currentPinchDistance;
        //} else {
        //lCameraDistance -= (currentPinchDistance < initialPinchDistance ? -currentPinchDistance : currentPinchDistance) * time * 0.1f;
        //if(lCameraDistance > 500) {
        //lCameraDistance = 500;
        //} else if(lCameraDistance < 200) {
        //lCameraDistance = 200;
        //}
        //}
        //break;
        //case GestureType.PinchComplete:
        //initialPinchDistance = null;
        //break;
        //}
        //}